 Remove K Digits
Medium
Given a non-negative integer num represented as a string, remove k digits from the number so that the new number is the smallest possible.
Note:
•	The length of num is less than 10002 and will be ≥ k.
•	The given num does not contain any leading zero.
Example 1:
Input: num = "1432219", k = 3
Output: "1219"
Explanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.
Example 2:
Input: num = "10200", k = 1
Output: "200"
Explanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.
Example 3:
Input: num = "10", k = 2
Output: "0"
Explanation: Remove all the digits from the number and it is left with nothing which is 0.


class Solution {
public:
    string removeKdigits(string num, int k) {
        
        stack<char>st;
        
        char ch;
        
        int i=0,n=num.size();
        
        if(k>=n)
            return "0";
        
        while(i<n && num[i]=='0')
        {
            i++;
        }
        
        if(i==n)
        {
            return "0";
        }
        
   //   st.push(num[i]);
        
        
        //1432219
        while(i<n && k>0)
        {
            ch=num[i];
            if(!st.empty())
            {
                while(!st.empty() && ch<st.top() && k>0)
                {
                    st.pop();
                    k--;
                    
                }
                
                if(!st.empty() || ch!='0')
                st.push(ch);
                
                  
            }
            else if(ch!='0')
            {
                st.push(ch);
            }
            
            i++;
        }
        
        while(i<n)
        {
            ch=num[i];
            st.push(ch);
            i++;
        }
        string out="";
        
        while(!st.empty())
        {
            ch=st.top();
            
            if(k==0)
            out+=ch;
            else
                k--;
            
            st.pop();
        }
        reverse(out.begin(),out.end());
        
        if(out=="")
            out="0";
        
        return out;
        
    }
};


